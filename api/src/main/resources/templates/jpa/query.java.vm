package ${package.Entity};

import java.io.Serializable;
import java.util.Date;
import java.math.BigDecimal;
import javax.persistence.*;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import com.fasterxml.jackson.annotation.JsonFormat;

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
@Accessors(chain = true)
#end


#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class Query${entity} implements Serializable {
#end


## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
    #end
    #if(${field.propertyType.equals("Date")})
    @Temporal(value = TemporalType.TIMESTAMP)
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    #end
    #if(${field.keyIdentityFlag})
    private Integer ${field.propertyName};
    #else
    private ${field.propertyType} ${field.propertyName};
    #end
    #if(${field.propertyName.equals("createTime")})

    private String startTime ;

    private String endTime;
    public String getStartTime() {
            return startTime;
            }

    public void setStartTime(String startTime) {
            this.startTime = startTime;
            }

    public String getEndTime() {
            return endTime;
            }

    public void setEndTime(String endTime) {
            this.endTime = endTime;
            }
    #end
#end

private Integer page=1;

private Integer pageSize=10;
public Integer getPage() {
        return page;
        }

public void setPage(Integer page) {
        this.page = page;
        }

public Integer getPageSize() {
        return pageSize;
        }

public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        }
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end
        #if(${field.keyFlag})
        public Integer getId() {return id;}

        #else
        public ${field.propertyType} ${getprefix}${field.capitalName}() {
                return ${field.propertyName};
                }
        #end
        #if(${field.keyFlag})
        public void setId(Integer id) {this.id = id;}

        #else
            #if(${entityBuilderModel})
            public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
            #else
            public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
            #end
                this.${field.propertyName} = ${field.propertyName};
            #if(${entityBuilderModel})
                    return this;
            #end
                }
        #end
    #end
#end


        }