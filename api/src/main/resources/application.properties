server.port=9295
server.servlet.session.timeout=10s
server.tomcat.max-threads=0
server.tomcat.uri-encoding=UTF-8

# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://dev.zsxiaohe.com/xplatform?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=iswater
#spring.datasource.url=jdbc:mysql://iotsvr.he-live.com:3307/xplatform?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
#spring.datasource.username=root
#spring.datasource.password=iswater

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.ini
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.enabled=true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


spring.jpa.show-sql=true
logging.level.org.springframework=WARN
logging.level.org.spring.springboot.dao=DEBUG
logging.file=logs/spring-boot-logging.log

#mybatis—plus
mybatis-plus.mapper-locations=classpath*:mapper/**/*.xml
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.type-aliases-package=com.xiaohe.xplatform.modules.sys.entity;
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=0
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mybatis-plus.global-config.field-strategy=2
#驼峰下划线转换
mybatis-plus.db-column-underline=true
#刷新mapper 调试神器
mybatis-plus.refresh-mapper=true
#逻辑删除配置
mybatis-plus.logic-delete-value=-1
mybatis-plus.logic-not-delete-value=0
#自定义SQL注入器
mybatis-plus.sql-injector=com.baomidou.mybatisplus.mapper.LogicSqlInjector
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false
mybatis-plus.configuration.call-setters-on-nulls=true


#JPA 代码生成配置文件
#默认生成所有表，下面可以按要求设置表
#注意 <include> 与 <exclude> 只能配置一项！ 用分号隔开
#表前缀，多个用英文分号隔开，没有就不填tb_;tc_,建议统一前缀
tablePrefix=tb_
#需要排除的表
exclude=
#只要生成的表
include=
#输出保存路径
outputDir=E:/model/
outputDirJpa=E:/model/jpa/
outputDirMybatis=E:/model/mybatis/
outputDirVue=E:/model/vue/
#类的创建者
author=hzh

#包配置可以自定义增加,此处为自定义
#比如service 生成后包名路径为com.he.temp.service
#假如一个实体 User,生成service为com.he.temp.service.UserService
parent=com.etar.purifier.modules
model=
controller=controller
entity=entity
service=service
impl=service/impl
jpa=jpa
dao=dao
xml=xml
vue=js
js=js/status
menu=sql
#springBoot版本  不填写 则默认2.0.4
boot.version=
spring.velocity.expose-request-attributes=true